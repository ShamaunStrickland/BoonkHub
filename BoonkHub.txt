local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local artifactRemote = ReplicatedStorage.Remotes.ClientToServer.Artifact
local artifactEvent = artifactRemote.OnClientEvent

local lastArtifact = nil

artifactEvent:Connect(function(v3)
	lastArtifact = v3
end)

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BoonkHub"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 300)
frame.Position = UDim2.new(0, 20, 0, 20)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
title.Text = "ðŸŒ€ BoonkHub ESP"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.Parent = frame

Instance.new("UICorner", title).CornerRadius = UDim.new(0, 8)

local function createToggleButton(text, order)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -20, 0, 40)
	btn.Position = UDim2.new(0, 10, 0, 40 + (order * 45))
	btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 16
	btn.Text = text .. ": OFF"
	btn.Parent = frame
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
	return btn
end

local trinketBtn = createToggleButton("Trinket ESP", 0)
local spawnBtn = createToggleButton("Map Spawn ESP", 1)
local playerBtn = createToggleButton("Player ESP", 2)
local autoCollectBtn = createToggleButton("Auto Collect Trinkets", 3)

-- States
local trinketEnabled = false
local spawnEnabled = false
local playerEnabled = false
local autoCollectEnabled = false

local activeMarkers = {}

local trinketConn, spawnConn, playerConn

local function createBillboard(part, labelText, size, color)
	local billboard = part:FindFirstChild("TempESP")
	if not billboard then
		billboard = Instance.new("BillboardGui")
		billboard.Adornee = part
		billboard.Size = UDim2.new(0, size or 120, 0, 30)
		billboard.AlwaysOnTop = true
		billboard.Name = "TempESP"
		billboard.Parent = part

		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, 0, 1, 0)
		label.BackgroundTransparency = 1
		label.Text = labelText
		label.TextColor3 = color or Color3.new(1, 1, 1)
		label.TextStrokeTransparency = 0.5
		label.TextScaled = true
		label.Font = Enum.Font.GothamBold
		label.Name = "ESPLabel"
		label.Parent = billboard

		table.insert(activeMarkers, billboard)
	else
		local label = billboard:FindFirstChild("ESPLabel")
		if label then
			label.Text = labelText
		end
	end
end

local function clearMarkers()
	for _, marker in ipairs(activeMarkers) do
		if marker and marker.Parent then
			marker:Destroy()
		end
	end
	activeMarkers = {}
end

local function toggleTrinket()
	trinketEnabled = not trinketEnabled
	trinketBtn.Text = "Trinket ESP: " .. (trinketEnabled and "ON" or "OFF")
	if trinketConn then trinketConn:Disconnect() end
	if not trinketEnabled then clearMarkers() return end

	trinketConn = RunService.RenderStepped:Connect(function()
		local folder = workspace:FindFirstChild("Game")
			and workspace.Game:FindFirstChild("Trinkets")
			and workspace.Game.Trinkets:FindFirstChild("Spawned")
		if folder then
			for _, trinket in ipairs(folder:GetChildren()) do
				local mainPart = trinket:IsA("BasePart") and trinket or trinket:FindFirstChildWhichIsA("BasePart")
				if mainPart and LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
					local dist = (mainPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
					createBillboard(mainPart, string.format("%s | %.0fm", trinket.Name, dist), 150, Color3.fromRGB(0, 255, 0))
				end
			end
		end
	end)
end

local function toggleSpawn()
	spawnEnabled = not spawnEnabled
	spawnBtn.Text = "Map Spawn ESP: " .. (spawnEnabled and "ON" or "OFF")
	if spawnConn then spawnConn:Disconnect() end
	if not spawnEnabled then clearMarkers() return end

	spawnConn = RunService.RenderStepped:Connect(function()
		for _, obj in ipairs(workspace:GetChildren()) do
			if (obj:IsA("Model") or obj:IsA("BasePart")) and not Players:FindFirstChild(obj.Name) then
				local mainPart = obj:IsA("Model") and (obj.PrimaryPart or obj:FindFirstChildWhichIsA("BasePart")) or obj
				if mainPart then
					createBillboard(mainPart, obj.Name .. " - Spawned", 120, Color3.fromRGB(255, 165, 0))
				end
			end
		end
	end)
end

local function togglePlayer()
	playerEnabled = not playerEnabled
	playerBtn.Text = "Player ESP: " .. (playerEnabled and "ON" or "OFF")
	if playerConn then playerConn:Disconnect() end
	if not playerEnabled then clearMarkers() return end

	playerConn = RunService.RenderStepped:Connect(function()
		for _, plr in ipairs(Players:GetPlayers()) do
			if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				local dist = (plr.Character.HumanoidRootPart.Position - LocalPlayer.Character.PrimaryPart.Position).Magnitude
				local hp = plr.Character:FindFirstChild("Humanoid") and math.floor(plr.Character.Humanoid.Health) or 0
				createBillboard(plr.Character.HumanoidRootPart, string.format("%s | %d HP | %.0fm", plr.Name, hp, dist), 100, Color3.fromRGB(0, 200, 255))
			end
		end
	end)
end

local function toggleAutoCollect()
	autoCollectEnabled = not autoCollectEnabled
	autoCollectBtn.Text = "Auto Collect Trinkets: " .. (autoCollectEnabled and "ON" or "OFF")

	if autoCollectEnabled then
		task.spawn(function()
			while autoCollectEnabled do
				local folder = workspace:FindFirstChild("Game")
					and workspace.Game:FindFirstChild("Trinkets")
					and workspace.Game.Trinkets:FindFirstChild("Spawned")
				if folder then
					for _, trinket in ipairs(folder:GetChildren()) do
						local mainPart = trinket:IsA("BasePart") and trinket or trinket:FindFirstChildWhichIsA("BasePart")
						if mainPart and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
							LocalPlayer.Character.HumanoidRootPart.CFrame = mainPart.CFrame + Vector3.new(0, 5, 0)
							task.wait(0.5)

							if lastArtifact then
								artifactRemote:FireServer("Accept", lastArtifact)
								lastArtifact = nil
							end

							task.wait(0.5)
						end
					end
				end
				task.wait(1)
			end
		end)
	end
end

-- Button events
trinketBtn.MouseButton1Click:Connect(toggleTrinket)
spawnBtn.MouseButton1Click:Connect(toggleSpawn)
playerBtn.MouseButton1Click:Connect(togglePlayer)
autoCollectBtn.MouseButton1Click:Connect(toggleAutoCollect)

-- Bind "-" key to hide/show GUI
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.Minus then
		frame.Visible = not frame.Visible
	end
end)
