--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

repeat task.wait() until player:FindFirstChild("PlayerGui")
repeat task.wait() until player.Character or player.CharacterAdded:Wait()

local function getHRP(char)
	return char and char:FindFirstChild("HumanoidRootPart")
end

--// Globals
local lockOnEnabled = false
local hotkeyLockEnabled = false
local targetPlayer = nil
local highlightColor = Color3.fromRGB(255, 0, 0)
local LOCK_HOTKEY = Enum.KeyCode.E
local awaitingHotkey = false

--// UI Setup
local gui = Instance.new("ScreenGui")

gui.Name = "FaceLockGui"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true

if player:FindFirstChild("PlayerGui"):FindFirstChild("FaceLockGui") then
    player.PlayerGui.FaceLockGui:Destroy()
end
gui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 320, 0, 470)
mainFrame.Position = UDim2.new(0.5, -160, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.ZIndex = 10
mainFrame.Parent = gui

local tabButtonsFrame = Instance.new("Frame")
tabButtonsFrame.Name = "TabButtons"
tabButtonsFrame.Size = UDim2.new(1, 0, 0, 40)
tabButtonsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
tabButtonsFrame.ZIndex = 11
tabButtonsFrame.Parent = mainFrame

local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, 0, 1, -40)
contentFrame.Position = UDim2.new(0, 0, 0, 40)
contentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
contentFrame.ClipsDescendants = true
contentFrame.ZIndex = 11
contentFrame.Parent = mainFrame

local playerTab = Instance.new("Frame")
playerTab.Name = "PlayerTab"
playerTab.Size = UDim2.new(1, 0, 1, 0)
playerTab.BackgroundTransparency = 1
playerTab.Visible = true
playerTab.Visible = true
playerTab.ZIndex = 12
playerTab.Parent = contentFrame

local playerList = Instance.new("ScrollingFrame")
playerList.Name = "PlayerList"
playerList.Size = UDim2.new(1, -20, 1, -120)
playerList.Position = UDim2.new(0, 10, 0, 10)
playerList.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
playerList.BorderSizePixel = 0
playerList.ScrollBarThickness = 8
playerList.CanvasSize = UDim2.new()
playerList.AutomaticCanvasSize = Enum.AutomaticSize.Y
playerList.ZIndex = 13
playerList.Parent = playerTab

local layout = Instance.new("UIListLayout")
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 4)
layout.Parent = playerList

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 100, 0, 32)
toggleButton.Position = UDim2.new(0, 10, 0, 340)
toggleButton.Text = "Toggle: OFF"
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.ZIndex = 14
toggleButton.Visible = true
toggleButton.Parent = playerTab

local hotkeyLabel = Instance.new("TextLabel")
hotkeyLabel.Size = UDim2.new(0, 100, 0, 32)
hotkeyLabel.Position = UDim2.new(0, 120, 0, 340)
hotkeyLabel.Text = "Hotkey: [E]"
hotkeyLabel.BackgroundTransparency = 1
hotkeyLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
hotkeyLabel.ZIndex = 14
hotkeyLabel.Visible = true
hotkeyLabel.Parent = playerTab

local setHotkeyButton = Instance.new("TextButton")
setHotkeyButton.Size = UDim2.new(0, 80, 0, 32)
setHotkeyButton.Position = UDim2.new(0, 230, 0, 340)
setHotkeyButton.Text = "Set Hotkey"
setHotkeyButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
setHotkeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
setHotkeyButton.ZIndex = 14
setHotkeyButton.Visible = true
setHotkeyButton.Parent = playerTab

--// Search & Status

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1, -20, 0, 30)
searchBox.Position = UDim2.new(0, 10, 0, 10)
searchBox.PlaceholderText = "Type player name..."
searchBox.Text = ""
searchBox.ZIndex = 14
searchBox.Parent = playerTab

local searchButton = Instance.new("TextButton")
searchButton.Size = UDim2.new(1, -20, 0, 30)
searchButton.Position = UDim2.new(0, 10, 0, 50)
searchButton.Text = "Search"
searchButton.ZIndex = 14
searchButton.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
searchButton.TextColor3 = Color3.fromRGB(255, 255, 255)
searchButton.Parent = playerTab

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -20, 0, 20)
statusLabel.Position = UDim2.new(0, 10, 0, 90)
statusLabel.Text = "Status: Idle"
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.BackgroundTransparency = 1
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.ZIndex = 14
statusLabel.Parent = playerTab

searchButton.MouseButton1Click:Connect(function()
	local inputName = searchBox.Text:lower()
	local found = false

	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player and plr.Name:lower():sub(1, #inputName) == inputName then
			if targetPlayer then removeHighlight(targetPlayer.Character) end
			targetPlayer = plr
			addHighlight(plr.Character)
			statusLabel.Text = "Status: Selected by search: " .. plr.Name
			found = true
			break
		end
	end

	if not found then
		statusLabel.Text = "Status: Player not found."
	end
end)

--// Highlight Utilities
local function addHighlight(character)
	if not character:FindFirstChild("Highlight") then
		local hl = Instance.new("Highlight")
		hl.Name = "Highlight"
		hl.Adornee = character
		hl.FillColor = Color3.new(0, 0, 0)
		hl.OutlineColor = highlightColor
		hl.Parent = character
	end
end

local function removeHighlight(character)
	if character and character:FindFirstChild("Highlight") then
		character.Highlight:Destroy()
	end
end

--// Player List
local function updatePlayerList()
	playerList:ClearAllChildren()
	layout.Parent = playerList

	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player and plr.Character and getHRP(plr.Character) then
			local button = Instance.new("TextButton")
			button.Size = UDim2.new(1, 0, 0, 32)
			button.Text = plr.Name
			button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			button.TextColor3 = Color3.fromRGB(255, 255, 255)
			button.Parent = playerList

			button.MouseButton1Click:Connect(function()
				if targetPlayer then
					removeHighlight(targetPlayer.Character)
				end
				targetPlayer = plr
				addHighlight(plr.Character)
			end)
		end
	end
end

--// Lock-on Toggle
local function setLockOn(state)
	lockOnEnabled = state
	toggleButton.Text = lockOnEnabled and "Toggle: ON" or "Toggle: OFF"
end

toggleButton.MouseButton1Click:Connect(function()
	if targetPlayer then
		setLockOn(not lockOnEnabled)
	end
end)

--// Main Facing Logic
RunService.RenderStepped:Connect(function()
	if (lockOnEnabled or hotkeyLockEnabled) and targetPlayer and targetPlayer.Character and getHRP(targetPlayer.Character) then
		local myChar = player.Character
		local myHRP = getHRP(myChar)
		local targetHRP = getHRP(targetPlayer.Character)
		if myHRP and targetHRP then
			local lookPos = Vector3.new(targetHRP.Position.X, myHRP.Position.Y, targetHRP.Position.Z)
			myHRP.CFrame = CFrame.new(myHRP.Position, lookPos)
			camera.CFrame = CFrame.new(camera.CFrame.Position, targetHRP.Position)
		end
	end
end)

--// Hotkey Assignment
setHotkeyButton.MouseButton1Click:Connect(function()
	awaitingHotkey = true
	setHotkeyButton.Text = "Press a key..."
end)

UserInputService.InputBegan:Connect(function(input, gpe)
	if awaitingHotkey and not gpe then
		LOCK_HOTKEY = input.KeyCode
		hotkeyLabel.Text = "Hotkey: [" .. LOCK_HOTKEY.Name .. "]"
		setHotkeyButton.Text = "Set Hotkey"
		awaitingHotkey = false
		return
	end

	if not gpe and input.KeyCode == LOCK_HOTKEY then
		local unitRay = camera:ScreenPointToRay(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
		local ray = Ray.new(unitRay.Origin, unitRay.Direction * 1000)
		local part = workspace:FindPartOnRay(ray, player.Character)

		if part then
			local candidate = Players:GetPlayerFromCharacter(part:FindFirstAncestorOfClass("Model"))
			if candidate then
				if targetPlayer and candidate == targetPlayer and hotkeyLockEnabled then
					removeHighlight(candidate.Character)
					targetPlayer = nil
					hotkeyLockEnabled = false
					return
				end

				if targetPlayer then
					removeHighlight(targetPlayer.Character)
				end
				targetPlayer = candidate
				addHighlight(candidate.Character)
				hotkeyLockEnabled = true
				setLockOn(false)
			end
		end
	end
end)

--// Character Reset
player.CharacterAdded:Connect(function()
	lockOnEnabled = false
	hotkeyLockEnabled = false
	if targetPlayer and targetPlayer.Character then
		removeHighlight(targetPlayer.Character)
	end
	targetPlayer = nil
	updatePlayerList()
end)

--// First Setup
updatePlayerList()
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)
